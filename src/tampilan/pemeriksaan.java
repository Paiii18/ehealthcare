/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tampilan;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/**
 *
 * @author Asus
 */
public class pemeriksaan extends javax.swing.JFrame {

    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    private dokter dokterInstance;
    private JTable tabledokter;
    private pasien caripasien;
    private JTable tablepasien;

    /**
     * Creates new form Pemeriksaan
     */
    public pemeriksaan() {
        initComponents();
        datatable();
        generatePemeriksaan();
        dokterInstance = new dokter();
        tabledokter = dokterInstance.getTableDokter();
        caripasien = new pasien();
        tablepasien = caripasien.getTablePasien();
    }

    protected void kosong() {
        tkode_periksa.setText("");
        tkode_dokter.setText("");
        tnama_dokter.setText("");
        tglperiksa.setDate(null);
        tkode_pasien.setText("");
        tnama_pasien.setText("");
        tgejala.setText("");
        tdiagnosis.setText("");
        generatePemeriksaan();
    }

    protected void datatable() {
        Object[] Baris = {"Kode Periksa", "Nama Dokter", "Nama Pasien", "Tanggal", "Gejala", "Diagnosis"};
        tabmode = new DefaultTableModel(null, Baris);
        tablepemeriksaan.setModel(tabmode);
        String sql = "select * from pemeriksaan";
        try {
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()) {
                String a = hasil.getString("kode_periksa");
                String b = hasil.getString("nama_dokter");
                String c = hasil.getString("nama_pasien");
                String d = hasil.getString("tanggal_periksa");
                String e = hasil.getString("gejala");
                String f = hasil.getString("diagnosis");

                String[] data = {a, b, c, d, e, f};
                tabmode.addRow(data);
            }
        } catch (Exception e) {
        }
    }

    public void generatePemeriksaan() {
        String sql = "SELECT MAX(RIGHT(kode_periksa, 3)) AS no FROM pemeriksaan";
        try (PreparedStatement stmt = conn.prepareStatement(sql); ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                String lastKode = rs.getString("no");
                int nextId = 1;
                if (lastKode != null) {
                    nextId = Integer.parseInt(lastKode) + 1;
                }
                String generatedKode = String.format("PKS%03d", nextId);
                tkode_periksa.setText(generatedKode);
            } else {
                tkode_periksa.setText("PKS001");
            }
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Kesalahan database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(dokter.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tglperiksa = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tgejala = new javax.swing.JTextArea();
        tdiagnosis = new javax.swing.JTextField();
        bsimpan = new javax.swing.JButton();
        bperbarui = new javax.swing.JButton();
        bhapus = new javax.swing.JButton();
        bkembali = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablepemeriksaan = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        tkode_dokter = new javax.swing.JTextField();
        bcari_dokter = new javax.swing.JButton();
        tnama_dokter = new javax.swing.JTextField();
        bcari_pasien = new javax.swing.JButton();
        tnama_pasien = new javax.swing.JTextField();
        tkode_pasien = new javax.swing.JTextField();
        tkode_periksa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Kode Periksa");

        jLabel2.setText("Kode Dokter");

        jLabel3.setText("Nama Dokter");

        jLabel4.setText("Kode Pasien");

        jLabel5.setText("Nama Pasien");

        jLabel6.setText("Tanggal Periksa");

        jLabel7.setText("Gejala");

        jLabel8.setText("Diagnosis");

        tgejala.setColumns(20);
        tgejala.setRows(5);
        jScrollPane1.setViewportView(tgejala);

        bsimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save.png"))); // NOI18N
        bsimpan.setText("Simpan");
        bsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsimpanActionPerformed(evt);
            }
        });

        bperbarui.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/update.png"))); // NOI18N
        bperbarui.setText("Perbarui");
        bperbarui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bperbaruiActionPerformed(evt);
            }
        });

        bhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/delete.png"))); // NOI18N
        bhapus.setText("Hapus");
        bhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhapusActionPerformed(evt);
            }
        });

        bkembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/back.png"))); // NOI18N
        bkembali.setText("Kembali");
        bkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkembaliActionPerformed(evt);
            }
        });

        tablepemeriksaan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablepemeriksaan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablepemeriksaanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablepemeriksaan);

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("*kode otomatis");

        bcari_dokter.setText("...");
        bcari_dokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcari_dokterActionPerformed(evt);
            }
        });

        bcari_pasien.setText("...");
        bcari_pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcari_pasienActionPerformed(evt);
            }
        });

        tkode_pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkode_pasienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bsimpan)
                        .addGap(20, 20, 20)
                        .addComponent(bperbarui)
                        .addGap(20, 20, 20)
                        .addComponent(bhapus)
                        .addGap(20, 20, 20)
                        .addComponent(bkembali))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(12, 12, 12)
                                    .addComponent(tkode_periksa, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tkode_dokter, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(bcari_dokter))
                                            .addComponent(tnama_dokter, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tnama_pasien))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(tkode_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bcari_pasien))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(jLabel8)
                                    .addGap(44, 44, 44)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1)
                                        .addComponent(tdiagnosis)
                                        .addComponent(tglperiksa, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9)
                            .addComponent(tkode_periksa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tkode_dokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bcari_dokter))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tnama_dokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(bcari_pasien)
                            .addComponent(tkode_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(tglperiksa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tdiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tnama_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bsimpan)
                    .addComponent(bperbarui)
                    .addComponent(bhapus)
                    .addComponent(bkembali))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tkode_pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkode_pasienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tkode_pasienActionPerformed

    private void bsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsimpanActionPerformed
        // TODO add your handling code here:
        String periksa = tkode_periksa.getText();
        String iddokter = tkode_dokter.getText();
        String namadokter = tnama_dokter.getText();
        java.util.Date date = tglperiksa.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = null;
        if (date != null) {
            tanggal = sdf.format(date);
        }
        String idpasien = tkode_pasien.getText();
        String namapasien = tnama_pasien.getText();
        String gejala = tgejala.getText();
        String diagnosis = tdiagnosis.getText();

        try {
            String query = "INSERT INTO pemeriksaan (kode_periksa, kode_dokter, nama_dokter, kode_pasien, nama_pasien, tanggal_periksa, gejala, diagnosis) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, periksa);
            stmt.setString(2, iddokter);
            stmt.setString(3, namadokter);
            stmt.setString(4, idpasien);
            stmt.setString(5, namapasien);
            if (tanggal != null) {
                stmt.setString(6, tanggal);
            } else {
                stmt.setNull(6, java.sql.Types.DATE);
            }
            stmt.setString(7, gejala);
            stmt.setString(8, diagnosis);

            stmt.executeUpdate();
            datatable();
            kosong();
            JOptionPane.showMessageDialog(this, "Data Pemeriksaan berhasil disimpan");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Kesalahan database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bsimpanActionPerformed

    private void bperbaruiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bperbaruiActionPerformed
        // TODO add your handling code here:
        String periksa = tkode_periksa.getText();
        String iddokter = tkode_dokter.getText();
        String namadokter = tnama_dokter.getText();
        java.util.Date date = tglperiksa.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = null;
        if (date != null) {
            tanggal = sdf.format(date);
        }
        String idpasien = tkode_pasien.getText();
        String namapasien = tnama_pasien.getText();
        String gejala = tgejala.getText();
        String diagnosis = tdiagnosis.getText();

        try {
            String query = "UPDATE pemeriksaan SET kode_dokter=?, nama_dokter=?, kode_pasien=?, nama_pasien=?, tanggal_periksa=?, gejala=?, diagnosis=? WHERE kode_periksa=?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, iddokter);
            stmt.setString(2, namadokter);
            stmt.setString(3, idpasien);
            stmt.setString(4, namapasien);
            if (tanggal != null) {
                stmt.setString(5, tanggal);
            } else {
                stmt.setNull(5, java.sql.Types.DATE);
            }
            stmt.setString(6, gejala);
            stmt.setString(7, diagnosis);
            stmt.setString(8, periksa);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data pemeriksaan berhasil diupdate");
                datatable();
                kosong();
            } else {
                JOptionPane.showMessageDialog(this, "Tidak ada data dengan kode periksa " + periksa, "Error", JOptionPane.ERROR_MESSAGE);
            }
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Kesalahan database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bperbaruiActionPerformed

    private void bhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhapusActionPerformed
        // TODO add your handling code here:
        String periksa = tkode_periksa.getText();

        try {
            String query = "DELETE FROM pemeriksaan WHERE kode_periksa=?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, periksa);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data pemeriksaan berhasil dihapus");
                datatable();
                kosong();
            } else {
                JOptionPane.showMessageDialog(this, "Tidak ada data dengan kode periksa " + periksa, "Error", JOptionPane.ERROR_MESSAGE);
            }
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Kesalahan database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bhapusActionPerformed

    private void bkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkembaliActionPerformed
        // TODO add your handling code here:
        new menu().setVisible(true);
         dispose();
    }//GEN-LAST:event_bkembaliActionPerformed

    private void bcari_dokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcari_dokterActionPerformed
        // TODO add your handling code here:
        dokterInstance = new dokter();
        tabledokter = dokterInstance.getTableDokter();

        JScrollPane scrollPane = new JScrollPane(tabledokter);

        javax.swing.JDialog dialog = new javax.swing.JDialog(this, "Cari Dokter", true);
        dialog.getContentPane().add(scrollPane);
        dialog.pack();
        dialog.setLocationRelativeTo(null);

        tabledokter.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tabledokter.getSelectedRow();
                    if (selectedRow != -1) {
                        String kodeDokter = tabledokter.getValueAt(selectedRow, 0).toString();
                        String namaDokter = tabledokter.getValueAt(selectedRow, 1).toString();
                        tkode_dokter.setText(kodeDokter);
                        tnama_dokter.setText(namaDokter);
                        dialog.dispose();
                    }
                }
            }
        });

        dialog.setVisible(true);
    }//GEN-LAST:event_bcari_dokterActionPerformed

    private void bcari_pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcari_pasienActionPerformed
        // TODO add your handling code here:
        caripasien = new pasien();
        tablepasien = caripasien.getTablePasien();

        JScrollPane scrollPane = new JScrollPane(tablepasien);

        javax.swing.JDialog dialog = new javax.swing.JDialog(this, "Cari Pasien", true);
        dialog.getContentPane().add(scrollPane);
        dialog.pack();
        dialog.setLocationRelativeTo(null);

        tablepasien.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tablepasien.getSelectedRow();
                    if (selectedRow != -1) {
                        String kodeDokter = tablepasien.getValueAt(selectedRow, 0).toString();
                        String namaDokter = tablepasien.getValueAt(selectedRow, 1).toString();
                        tkode_pasien.setText(kodeDokter);
                        tnama_pasien.setText(namaDokter);
                        dialog.dispose();
                    }
                }
            }
        });

        dialog.setVisible(true);
    }//GEN-LAST:event_bcari_pasienActionPerformed

    private void tablepemeriksaanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablepemeriksaanMouseClicked
        // TODO add your handling code here:
        int Bar = tablepemeriksaan.getSelectedRow();
        String a = tabmode.getValueAt(Bar, 0).toString();
        String b = tabmode.getValueAt(Bar, 1).toString();
        String c = tabmode.getValueAt(Bar, 2).toString();
        String d = tabmode.getValueAt(Bar, 3).toString();
        String e = tabmode.getValueAt(Bar, 4).toString();
        String f = tabmode.getValueAt(Bar, 5).toString();

        tkode_periksa.setText(a);
        tnama_dokter.setText(b);
        tnama_pasien.setText(c);
        tgejala.setText(e);
        tdiagnosis.setText(f);

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date tanggal = sdf.parse(d);
            tglperiksa.setDate(tanggal);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Format tanggal salah: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            tglperiksa.setDate(null);
        }
    }//GEN-LAST:event_tablepemeriksaanMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pemeriksaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pemeriksaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pemeriksaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pemeriksaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pemeriksaan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bcari_dokter;
    private javax.swing.JButton bcari_pasien;
    private javax.swing.JButton bhapus;
    private javax.swing.JButton bkembali;
    private javax.swing.JButton bperbarui;
    private javax.swing.JButton bsimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablepemeriksaan;
    private javax.swing.JTextField tdiagnosis;
    private javax.swing.JTextArea tgejala;
    private com.toedter.calendar.JDateChooser tglperiksa;
    private javax.swing.JTextField tkode_dokter;
    private javax.swing.JTextField tkode_pasien;
    private javax.swing.JTextField tkode_periksa;
    private javax.swing.JTextField tnama_dokter;
    private javax.swing.JTextField tnama_pasien;
    // End of variables declaration//GEN-END:variables
}
